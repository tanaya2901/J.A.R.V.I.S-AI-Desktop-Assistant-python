import pyttsx3
import datetime
import speech_recognition as sr
import pyaudio
import wikipedia
import webbrowser
import os

engine= pyttsx3.init('sapi5')#use to take voice
voices= engine.getProperty('voices')
print(voices[1])
engine.setProperty('voice',voices[1].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wish_me():
    hour= int(datetime.datetime.now().hour)
    if hour >=0  and hour<12:
        speak('good morning')
    elif hour>=12 and hour<18:
            speak('good after noon')
            
    else:
        speak('good evening')
    speak('I am Jarvis. please tell me how may I help you?')
    
def takeCommand():
    #it takes microphone input from user and returns string output
    r= sr.Recognizer()
    with sr.Microphone() as source:
        print('Listening...')
        r.pause_thresold = 2          #seconds of non-speaking audio before a phrase is considered complete
        audio = r.listen(source)
        
    try:
        print("Recognizing...")
        query = r.recognize_google(audio,language='en-in')
        #print('user said: ', query)
        print(f"user said: {query}\n")
    
    except Exception as e:
        #print(e)
        print('say that again please...')
        return 'None'
    return query 

    
    
if __name__ =='__main__':
    wish_me()
    while True:
        query = takeCommand().lower()

        #logic for executing task based on query.
        if 'wikipedia' in query:
            speak('searching wikipedia...')
            query = query.replace('wikipedia', '')
            results = wikipedia.summary(query, sentences=1) 
            speak('According to wikipedia')
            print(results)
            speak(results)

        elif 'open youtube' in query:
            webbrowser.open('youtube.com')

        elif 'open google' in query:
            webbrowser.open('google.com')

        elif 'open stackoverflow' in query:
            webbrowser.open('stackoverflow.com')


        elif 'play music' in query:
            #music_dir= 'E:\\jarvis music\JMrunaway'
            #music_dir= 'E:\\jarvis music'
            music_dir= 'E:\\Jarvis Music'
            songs = os.listdir(music_dir)
            print(songs)
            speak('playing music')
            os.startfile(os.path.join(music_dir,songs[0]))  #we can also use random module to play random song

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime('%H:%M:%S')
            speak(f'the time is {strTime}')
